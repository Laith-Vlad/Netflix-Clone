{"ast":null,"code":"var _jsxFileName = \"/home/laith/Netflix-Clone/src/Movie/movie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ModalMovie from '../ModalMovie/modalMovie';\nimport './card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movie = _ref => {\n  _s();\n  let {\n    movie\n  } = _ref;\n  const [showModal, setShowModal] = useState(false);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  // const addToFavorites = () => {\n  //   fetch('http://localhost:3044/addmovie', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify(movie),\n  //   })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log('Movie added to favorites:', data);\n  //       // Add any additional logic here, such as displaying a success message\n  //     })\n  //     .catch(error => {\n  //       console.error('Error adding movie to favorites:', error);\n  //       // Handle any errors that occur during the POST request\n  //     });\n  // };\n\n  const twoInOne = () => {\n    // addToFavorites();\n    toggleModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: twoInOne,\n      children: \"Add to Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ModalMovie, {\n      movie: movie,\n      toggleModal: twoInOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, movie.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Movie, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","ModalMovie","jsxDEV","_jsxDEV","Movie","_ref","_s","movie","showModal","setShowModal","toggleModal","twoInOne","className","children","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["/home/laith/Netflix-Clone/src/Movie/movie.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ModalMovie from '../ModalMovie/modalMovie';\nimport './card.css';\n\nconst Movie = ({ movie }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  // const addToFavorites = () => {\n  //   fetch('http://localhost:3044/addmovie', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify(movie),\n  //   })\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log('Movie added to favorites:', data);\n  //       // Add any additional logic here, such as displaying a success message\n  //     })\n  //     .catch(error => {\n  //       console.error('Error adding movie to favorites:', error);\n  //       // Handle any errors that occur during the POST request\n  //     });\n  // };\n\n  const twoInOne = () => {\n    // addToFavorites();\n    toggleModal();\n  };\n\n  return (\n    <div key={movie.id} className=\"movie-card\">\n      <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n      <button onClick={twoInOne}>Add to Favorites</button>\n      {showModal && (\n        <ModalMovie movie={movie} toggleModal={twoInOne} />\n      )}\n    </div>\n  );\n};\n\nexport default Movie;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACtB,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB;IACAD,WAAW,CAAC,CAAC;EACf,CAAC;EAED,oBACEP,OAAA;IAAoBS,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACxCV,OAAA;MAAKW,GAAG,EAAG,kCAAiCP,KAAK,CAACQ,WAAY,EAAE;MAACC,GAAG,EAAET,KAAK,CAACU;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFlB,OAAA;MAAQmB,OAAO,EAAEX,QAAS;MAAAE,QAAA,EAAC;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnDb,SAAS,iBACRL,OAAA,CAACF,UAAU;MAACM,KAAK,EAAEA,KAAM;MAACG,WAAW,EAAEC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnD;EAAA,GALOd,KAAK,CAACgB,EAAE;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMb,CAAC;AAEV,CAAC;AAACf,EAAA,CAxCIF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}