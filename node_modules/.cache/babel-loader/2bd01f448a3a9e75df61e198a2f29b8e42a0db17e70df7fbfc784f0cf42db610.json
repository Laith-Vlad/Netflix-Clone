{"ast":null,"code":"var _jsxFileName = \"/home/laith/Netflix-Clone/src/ModalMovie/modalMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './mod.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalMovie = _ref => {\n  _s();\n  let {\n    movie\n  } = _ref;\n  const [showModal, setShowModal] = useState(true);\n  const [comment, setComment] = useState('');\n  const handleAddToFavorites = () => {\n    fetch('http://localhost:3004/addmovie', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: movie.data.title,\n        overview: movie.data.overview\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Movie added to favorites:', data);\n      // Add any additional logic here, such as displaying a success message\n    }).catch(error => {\n      console.error('Error adding movie to favorites:', error);\n      // Handle any errors that occur during the POST request\n    });\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add a comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          rows: \"4\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddToFavorites,\n          children: \"Add to Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ModalMovie, \"QICfaD4CpZUClgR9Exd7SGhEZZg=\");\n_c = ModalMovie;\nexport default ModalMovie;\nvar _c;\n$RefreshReg$(_c, \"ModalMovie\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalMovie","_ref","_s","movie","showModal","setShowModal","comment","setComment","handleAddToFavorites","fetch","method","headers","body","JSON","stringify","title","data","overview","then","response","json","console","log","catch","error","closeModal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","poster_path","alt","value","onChange","e","target","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/home/laith/Netflix-Clone/src/ModalMovie/modalMovie.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './mod.css';\n\nconst ModalMovie = ({ movie }) => {\n  const [showModal, setShowModal] = useState(true);\n  const [comment, setComment] = useState('');\n\n  const handleAddToFavorites = () => {\n    fetch('http://localhost:3004/addmovie', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        title: movie.data.title,\n        overview: movie.data.overview,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Movie added to favorites:', data);\n        // Add any additional logic here, such as displaying a success message\n      })\n      .catch(error => {\n        console.error('Error adding movie to favorites:', error);\n        // Handle any errors that occur during the POST request\n      });\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      {showModal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>{movie.title}</h2>\n            <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n            <p>Add a comment:</p>\n            <textarea\n              value={comment}\n              onChange={e => setComment(e.target.value)}\n              rows=\"4\"\n              cols=\"50\"\n            />\n            <button onClick={handleAddToFavorites}>Add to Favorites</button>\n            <button onClick={closeModal}>Close</button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ModalMovie;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,UAAU,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC3B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,oBAAoB,GAAGA,CAAA,KAAM;IACjCC,KAAK,CAAC,gCAAgC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAEZ,KAAK,CAACa,IAAI,CAACD,KAAK;QACvBE,QAAQ,EAAEd,KAAK,CAACa,IAAI,CAACC;MACvB,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACF,IAAI,IAAI;MACZK,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEN,IAAI,CAAC;MAC9C;IACF,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC,CAAC;EACN,CAAC;;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBpB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAA2B,QAAA,EACGtB,SAAS,iBACRP,OAAA;MAAK8B,SAAS,EAAC,OAAO;MAAAD,QAAA,eACpB7B,OAAA;QAAK8B,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5B7B,OAAA;UAAA6B,QAAA,EAAKvB,KAAK,CAACY;QAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBlC,OAAA;UAAKmC,GAAG,EAAG,kCAAiC7B,KAAK,CAAC8B,WAAY,EAAE;UAACC,GAAG,EAAE/B,KAAK,CAACY;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrFlC,OAAA;UAAA6B,QAAA,EAAG;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACrBlC,OAAA;UACEsC,KAAK,EAAE7B,OAAQ;UACf8B,QAAQ,EAAEC,CAAC,IAAI9B,UAAU,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,IAAI,EAAC,GAAG;UACRC,IAAI,EAAC;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACFlC,OAAA;UAAQ4C,OAAO,EAAEjC,oBAAqB;UAAAkB,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChElC,OAAA;UAAQ4C,OAAO,EAAEhB,UAAW;UAAAC,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN,gBACD,CAAC;AAEP,CAAC;AAAC7B,EAAA,CAnDIF,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AAqDhB,eAAeA,UAAU;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}